swagger: "2.0"
info: 
  title: SimpleAPI
  version: 1.0.0
  contact:
    email: mohammadicecream@yahoo.com
  servers:
    -url: "http://localhost:5000"
    description: Local server
schemes: [http,https]
paths:
  /api/v1/auth/register:
    post:
      summary: Register new user
      description: Register new user
      tags: ["Authorization"]
      parameters:
        - in: body
          name: user
          description: "User you want to add. <br> Note : registerAccessKey is REGISTER_ACCESS_KEY that you set in .env file"
          schema:
            type: object
            required:
              - email
              - password
              - registerAccessKey
            properties:
              email:
                type: string
              password:
                type: string
              registerAccessKey:
                type: string
      responses:
        201:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /api/v1/auth/registerConfirm/{emailValidationKey}:
    post:
      summary: Verify Account You Registered
      description: Verify Account You Registered
      tags: ["Authorization"]
      parameters:
        - in: path
          name: emailValidationKey
          description: "User email you want to verify. <br> Note : its in db document it called emailValidationKey <br> Also you can implant the send email logic for the real api in ./services/auth.ts Line:27"
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /api/v1/auth/validationResend/{email}:
    post:
      summary: Resend Verify Link
      description: Resend Verify Link
      tags: ["Authorization"]
      parameters:
        - in: path
          name: email
          description: User email you want to send verify link again.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /api/v1/auth/login:
    post:
      summary: Login And Get Jwt Access Token
      description: Login And Get Jwt Access Token
      tags: ["Authorization"]
      parameters:
        - in: body
          name: user
          description: "User info you want login with. <br> Note: in successful response it gives you accessToken + saves http cookie for the refresh token route (expires in 30 days) <br>You should use accessToken in private routes with ('Authorization' : accessToken) in header. "
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /api/v1/auth/refreshToken:
    get:
      summary: Refresh The Access Token And Return New Access Token
      description: Refresh The Access Token And Return New Access Token
      tags: ["Authorization"]
      parameters:
        - in: cookie
          name: Authorization
          description: "Http Cookie That Will Get When You Login. <br> Note : Just Login and leave this empty"
          schema:
            type: string
      responses:
        200:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /api/v1/auth/logout:
    delete:
      summary: Logout and delete refreshToken
      description: Logout and delete refreshToken
      tags: ["Authorization"]
      parameters:
        - in: cookie
          name: Authorization
          description: "Http Cookie That Will Get When You Login. <br> Note : Just Login and leave this empty"
          schema:
            type: string
      responses:
        200:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /api/v1/quote/add:
    post:
      summary: Add new Quote
      description: Add new Quote
      tags: ["Quote"]
      parameters:
        - in: body
          name: quote
          description: "Quote you want to add."
          schema:
            type: object
            required:
              - quote
              - author
            properties:
              quote:
                type: string
              author:
                type: string
      responses:
        201:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /api/v1/quote/showRandom:
    get:
      summary: Show a random quote , it changes every hour
      description: Show a random quote , it changes every hour
      tags: ["Quote"]
      responses:
        200:
          description: Successful operation
        400:
          description: Bad Request
        500:
          description: Internal Server Error